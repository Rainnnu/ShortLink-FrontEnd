{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport dayjs from 'dayjs';\nexport default {\n  name: 'ShortLinkList',\n  data() {\n    return {\n      searchQuery: '',\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      links: [\n      // 示例数据（建议通过API获取）\n      {\n        id: 1,\n        shortUrl: 'https://s.link/abc123',\n        originalUrl: 'https://example.com/long-url',\n        createdAt: '2024-03-01 14:30',\n        accessCount: 150\n      }]\n    };\n  },\n  computed: {\n    filteredLinks() {\n      return this.links.filter(link => [link.shortUrl, link.originalUrl].some(text => text.toLowerCase().includes(this.searchQuery.toLowerCase())));\n    },\n    pagedLinks() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.filteredLinks.slice(start, end);\n    }\n  },\n  methods: {\n    // 格式时间显示\n    formatDate(row, column, cellValue) {\n      // 使用day.js库更可靠\n      return dayjs(cellValue).format('YYYY-MM-DD HH:mm');\n    },\n    // 处理分页变化\n    handleSizeChange(newSize) {\n      this.pageSize = newSize;\n      this.currentPage = 1;\n    },\n    handleCurrentChange(newPage) {\n      this.currentPage = newPage;\n    },\n    // 刷新列表\n    async refreshList() {\n      try {\n        this.loading = true;\n        // 模拟API调用\n        const response = await axios.get('/api/links');\n        this.links = response.data;\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 删除确认\n    async deleteLink(id) {\n      try {\n        await axios.delete(`/api/links/${id}`);\n        this.links = this.links.filter(link => link.id !== id);\n        this.$message.success('删除成功');\n      } catch (error) {\n        this.$message.error('删除失败');\n      }\n    },\n    // 短链点击处理\n    handleShortLinkClick(link) {\n      this.$confirm(`即将跳转到：${link.originalUrl}`, '安全提示', {\n        confirmButtonText: '继续访问',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        window.open(link.shortUrl, '_blank');\n      });\n    }\n  }\n};","map":{"version":3,"names":["dayjs","name","data","searchQuery","currentPage","pageSize","loading","links","id","shortUrl","originalUrl","createdAt","accessCount","computed","filteredLinks","filter","link","some","text","toLowerCase","includes","pagedLinks","start","end","slice","methods","formatDate","row","column","cellValue","format","handleSizeChange","newSize","handleCurrentChange","newPage","refreshList","response","axios","get","deleteLink","delete","$message","success","error","handleShortLinkClick","$confirm","confirmButtonText","cancelButtonText","type","then","window","open"],"sources":["src/views/ShortLinkList.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-container\">\r\n    <!-- 搜索和操作区 -->\r\n    <div class=\"operation-bar\">\r\n      <el-input\r\n          v-model=\"searchQuery\"\r\n          placeholder=\"输入短链/原始URL搜索\"\r\n          clearable\r\n          class=\"search-input\"\r\n          @clear=\"handleSearchClear\"\r\n      >\r\n        <template #prefix>\r\n          <i class=\"el-icon-search\"></i>\r\n        </template>\r\n      </el-input>\r\n\r\n      <el-button\r\n          type=\"primary\"\r\n          icon=\"el-icon-refresh\"\r\n          @click=\"refreshList\"\r\n      >刷新列表</el-button>\r\n    </div>\r\n\r\n    <!-- 数据表格 -->\r\n    <el-table\r\n        :data=\"pagedLinks\"\r\n        stripe\r\n        border\r\n        v-loading=\"loading\"\r\n        element-loading-text=\"正在加载...\"\r\n        class=\"data-table\"\r\n    >\r\n      <el-table-column prop=\"shortUrl\" label=\"短链\" sortable width=\"240\">\r\n        <template #default=\"{ row }\">\r\n          <el-link\r\n              type=\"primary\"\r\n              :href=\"row.shortUrl\"\r\n              target=\"_blank\"\r\n              @click.prevent=\"handleShortLinkClick(row)\"\r\n          >{{ row.shortUrl }}</el-link>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column\r\n          prop=\"originalUrl\"\r\n          label=\"原始URL\"\r\n          show-overflow-tooltip\r\n          width=\"400\"\r\n      />\r\n\r\n      <el-table-column\r\n          prop=\"createdAt\"\r\n          label=\"创建时间\"\r\n          sortable\r\n          width=\"180\"\r\n          :formatter=\"formatDate\"\r\n      />\r\n\r\n      <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\r\n        <template #default=\"{ row }\">\r\n          <el-button\r\n              type=\"primary\"\r\n              icon=\"el-icon-view\"\r\n              @click=\"showDetail(row)\"\r\n          >详情</el-button>\r\n\r\n          <el-popconfirm\r\n              title=\"确认删除该短链吗？\"\r\n              @confirm=\"deleteLink(row.id)\"\r\n          >\r\n            <template #reference>\r\n              <el-button\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n              >删除</el-button>\r\n            </template>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        background\r\n        :current-page=\"currentPage\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"pageSize\"\r\n        :total=\"filteredLinks.length\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        class=\"pagination\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dayjs from 'dayjs';\r\nexport default {\r\n  name: 'ShortLinkList',\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      loading: false,\r\n      links: [\r\n        // 示例数据（建议通过API获取）\r\n        {\r\n          id: 1,\r\n          shortUrl: 'https://s.link/abc123',\r\n          originalUrl: 'https://example.com/long-url',\r\n          createdAt: '2024-03-01 14:30',\r\n          accessCount: 150\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    filteredLinks() {\r\n      return this.links.filter(link =>\r\n          [link.shortUrl, link.originalUrl].some(\r\n              text => text.toLowerCase().includes(\r\n                  this.searchQuery.toLowerCase()\r\n              )\r\n          )\r\n      )\r\n    },\r\n    pagedLinks() {\r\n      const start = (this.currentPage - 1) * this.pageSize\r\n      const end = start + this.pageSize\r\n      return this.filteredLinks.slice(start, end)\r\n    }\r\n  },\r\n  methods: {\r\n    // 格式时间显示\r\n    formatDate(row, column, cellValue) {\r\n      // 使用day.js库更可靠\r\n      return dayjs(cellValue).format('YYYY-MM-DD HH:mm');\r\n    },\r\n    // 处理分页变化\r\n    handleSizeChange(newSize) {\r\n      this.pageSize = newSize\r\n      this.currentPage = 1\r\n    },\r\n\r\n    handleCurrentChange(newPage) {\r\n      this.currentPage = newPage\r\n    },\r\n\r\n    // 刷新列表\r\n    async refreshList() {\r\n      try {\r\n        this.loading = true;\r\n        // 模拟API调用\r\n        const response = await axios.get('/api/links');\r\n        this.links = response.data;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 删除确认\r\n    async deleteLink(id) {\r\n      try {\r\n        await axios.delete(`/api/links/${id}`);\r\n        this.links = this.links.filter(link => link.id !== id);\r\n        this.$message.success('删除成功');\r\n      } catch (error) {\r\n        this.$message.error('删除失败');\r\n      }\r\n    },\r\n\r\n    // 短链点击处理\r\n    handleShortLinkClick(link) {\r\n      this.$confirm(`即将跳转到：${link.originalUrl}`, '安全提示', {\r\n        confirmButtonText: '继续访问',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        window.open(link.shortUrl, '_blank')\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.list-container {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.operation-bar {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  max-width: 400px;\r\n}\r\n\r\n.data-table {\r\n  margin: 20px 0;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.el-button + .el-button {\r\n  margin-left: 8px;\r\n}\r\n</style>"],"mappings":";;AAiGA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,WAAA;MACAC,QAAA;MACAC,OAAA;MACAC,KAAA;MACA;MACA;QACAC,EAAA;QACAC,QAAA;QACAC,WAAA;QACAC,SAAA;QACAC,WAAA;MACA;IAEA;EACA;EACAC,QAAA;IACAC,cAAA;MACA,YAAAP,KAAA,CAAAQ,MAAA,CAAAC,IAAA,IACA,CAAAA,IAAA,CAAAP,QAAA,EAAAO,IAAA,CAAAN,WAAA,EAAAO,IAAA,CACAC,IAAA,IAAAA,IAAA,CAAAC,WAAA,GAAAC,QAAA,CACA,KAAAjB,WAAA,CAAAgB,WAAA,EACA,CACA,CACA;IACA;IACAE,WAAA;MACA,MAAAC,KAAA,SAAAlB,WAAA,aAAAC,QAAA;MACA,MAAAkB,GAAA,GAAAD,KAAA,QAAAjB,QAAA;MACA,YAAAS,aAAA,CAAAU,KAAA,CAAAF,KAAA,EAAAC,GAAA;IACA;EACA;EACAE,OAAA;IACA;IACAC,WAAAC,GAAA,EAAAC,MAAA,EAAAC,SAAA;MACA;MACA,OAAA7B,KAAA,CAAA6B,SAAA,EAAAC,MAAA;IACA;IACA;IACAC,iBAAAC,OAAA;MACA,KAAA3B,QAAA,GAAA2B,OAAA;MACA,KAAA5B,WAAA;IACA;IAEA6B,oBAAAC,OAAA;MACA,KAAA9B,WAAA,GAAA8B,OAAA;IACA;IAEA;IACA,MAAAC,YAAA;MACA;QACA,KAAA7B,OAAA;QACA;QACA,MAAA8B,QAAA,SAAAC,KAAA,CAAAC,GAAA;QACA,KAAA/B,KAAA,GAAA6B,QAAA,CAAAlC,IAAA;MACA;QACA,KAAAI,OAAA;MACA;IACA;IAEA;IACA,MAAAiC,WAAA/B,EAAA;MACA;QACA,MAAA6B,KAAA,CAAAG,MAAA,eAAAhC,EAAA;QACA,KAAAD,KAAA,QAAAA,KAAA,CAAAQ,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAR,EAAA,KAAAA,EAAA;QACA,KAAAiC,QAAA,CAAAC,OAAA;MACA,SAAAC,KAAA;QACA,KAAAF,QAAA,CAAAE,KAAA;MACA;IACA;IAEA;IACAC,qBAAA5B,IAAA;MACA,KAAA6B,QAAA,UAAA7B,IAAA,CAAAN,WAAA;QACAoC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACAC,MAAA,CAAAC,IAAA,CAAAnC,IAAA,CAAAP,QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}