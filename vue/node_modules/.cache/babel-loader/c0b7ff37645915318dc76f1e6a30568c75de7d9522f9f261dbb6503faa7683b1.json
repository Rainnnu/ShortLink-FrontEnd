{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"RedirectPage\",\n  data() {\n    return {\n      loading: true,\n      needPassword: false,\n      error: false,\n      errorMessage: \"\",\n      password: \"\",\n      submitting: false\n    };\n  },\n  methods: {\n    // 获取URL中的short参数\n    getShortCode() {\n      const query = this.$route.query;\n      return query.short || \"\";\n    },\n    // 检查短链状态\n    async checkLink() {\n      try {\n        const response = await this.$axios.get(`/api/check-password?short=${this.getShortCode()}`);\n        const data = response.data;\n        if (data.needPassword) {\n          this.needPassword = true;\n        } else {\n          // 直接跳转\n          window.location.href = data.originalUrl;\n        }\n      } catch (err) {\n        this.error = true;\n        this.errorMessage = \"链接验证失败，请刷新重试\";\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 提交密码验证\n    async handleSubmit() {\n      if (!this.password) {\n        this.$message.warning(\"请输入访问密码\");\n        return;\n      }\n      this.submitting = true;\n      try {\n        const response = await request.post(\"/shortLink/verifyPassword\", {\n          shortLink: this.getShortCode(),\n          password: this.password\n        });\n        if (response.data.valid) {\n          window.open(response.data.originalUrl, \"_blank\");\n        } else {\n          this.$message.error(\"密码验证失败\");\n        }\n      } catch (err) {\n        this.$message.error(\"验证请求失败\");\n      } finally {\n        this.submitting = false;\n      }\n    }\n  },\n  mounted() {\n    if (!this.getShortCode()) {\n      this.error = true;\n      this.errorMessage = \"缺少短链参数\";\n      this.loading = false;\n      return;\n    }\n    this.checkLink();\n  }\n};","map":{"version":3,"names":["request","name","data","loading","needPassword","error","errorMessage","password","submitting","methods","getShortCode","query","$route","short","checkLink","response","$axios","get","window","location","href","originalUrl","err","handleSubmit","$message","warning","post","shortLink","valid","open","mounted"],"sources":["src/views/RedirectPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"redirect-container\">\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"status-box\">\r\n      <i class=\"el-icon-loading\"></i>\r\n      <p>正在验证链接...</p>\r\n    </div>\r\n\r\n    <!-- 密码输入表单 -->\r\n    <div v-else-if=\"needPassword\" class=\"password-form\">\r\n      <h2>该链接需要访问密码</h2>\r\n      <el-form @submit.native.prevent=\"handleSubmit\">\r\n        <el-form-item label=\"访问密码\">\r\n          <el-input\r\n            v-model=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"请输入访问密码\"\r\n            show-password\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\r\n          验证密码\r\n        </el-button>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-else-if=\"error\" class=\"error-box\">\r\n      <i class=\"el-icon-warning\"></i>\r\n      <p>{{ errorMessage }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"RedirectPage\",\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      needPassword: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n      password: \"\",\r\n      submitting: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取URL中的short参数\r\n    getShortCode() {\r\n      const query = this.$route.query;\r\n      return query.short || \"\";\r\n    },\r\n\r\n    // 检查短链状态\r\n    async checkLink() {\r\n      try {\r\n        const response = await this.$axios.get(\r\n          `/api/check-password?short=${this.getShortCode()}`\r\n        );\r\n        const data = response.data;\r\n\r\n        if (data.needPassword) {\r\n          this.needPassword = true;\r\n        } else {\r\n          // 直接跳转\r\n          window.location.href = data.originalUrl;\r\n        }\r\n      } catch (err) {\r\n        this.error = true;\r\n        this.errorMessage = \"链接验证失败，请刷新重试\";\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 提交密码验证\r\n    async handleSubmit() {\r\n      if (!this.password) {\r\n        this.$message.warning(\"请输入访问密码\");\r\n        return;\r\n      }\r\n\r\n      this.submitting = true;\r\n      try {\r\n        const response = await request.post(\"/shortLink/verifyPassword\", {\r\n          shortLink: this.getShortCode(),\r\n          password: this.password,\r\n        });\r\n\r\n        if (response.data.valid) {\r\n          window.open(response.data.originalUrl, \"_blank\");\r\n        } else {\r\n          this.$message.error(\"密码验证失败\");\r\n        }\r\n      } catch (err) {\r\n        this.$message.error(\"验证请求失败\");\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    if (!this.getShortCode()) {\r\n      this.error = true;\r\n      this.errorMessage = \"缺少短链参数\";\r\n      this.loading = false;\r\n      return;\r\n    }\r\n    this.checkLink();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.redirect-container {\r\n  max-width: 600px;\r\n  margin: 100px auto;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.status-box {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.el-icon-loading {\r\n  font-size: 40px;\r\n  animation: rotating 2s linear infinite;\r\n}\r\n\r\n.password-form {\r\n  padding: 30px;\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.error-box {\r\n  color: #f56c6c;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n}\r\n\r\n@keyframes rotating {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAmCA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,YAAA;MACAC,KAAA;MACAC,YAAA;MACAC,QAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,aAAA;MACA,MAAAC,KAAA,QAAAC,MAAA,CAAAD,KAAA;MACA,OAAAA,KAAA,CAAAE,KAAA;IACA;IAEA;IACA,MAAAC,UAAA;MACA;QACA,MAAAC,QAAA,cAAAC,MAAA,CAAAC,GAAA,CACA,kCAAAP,YAAA,IACA;QACA,MAAAR,IAAA,GAAAa,QAAA,CAAAb,IAAA;QAEA,IAAAA,IAAA,CAAAE,YAAA;UACA,KAAAA,YAAA;QACA;UACA;UACAc,MAAA,CAAAC,QAAA,CAAAC,IAAA,GAAAlB,IAAA,CAAAmB,WAAA;QACA;MACA,SAAAC,GAAA;QACA,KAAAjB,KAAA;QACA,KAAAC,YAAA;MACA;QACA,KAAAH,OAAA;MACA;IACA;IAEA;IACA,MAAAoB,aAAA;MACA,UAAAhB,QAAA;QACA,KAAAiB,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,KAAAjB,UAAA;MACA;QACA,MAAAO,QAAA,SAAAf,OAAA,CAAA0B,IAAA;UACAC,SAAA,OAAAjB,YAAA;UACAH,QAAA,OAAAA;QACA;QAEA,IAAAQ,QAAA,CAAAb,IAAA,CAAA0B,KAAA;UACAV,MAAA,CAAAW,IAAA,CAAAd,QAAA,CAAAb,IAAA,CAAAmB,WAAA;QACA;UACA,KAAAG,QAAA,CAAAnB,KAAA;QACA;MACA,SAAAiB,GAAA;QACA,KAAAE,QAAA,CAAAnB,KAAA;MACA;QACA,KAAAG,UAAA;MACA;IACA;EACA;EACAsB,QAAA;IACA,UAAApB,YAAA;MACA,KAAAL,KAAA;MACA,KAAAC,YAAA;MACA,KAAAH,OAAA;MACA;IACA;IACA,KAAAW,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}