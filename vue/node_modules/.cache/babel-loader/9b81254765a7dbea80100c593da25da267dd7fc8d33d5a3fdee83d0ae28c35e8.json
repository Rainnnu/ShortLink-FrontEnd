{"ast":null,"code":"import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport CreateShortLink from \"../views/CreateShortLink.vue\";\nimport Layout from \"@/views/Layout.vue\";\nimport LinkDetail from \"@/views/LinkDetail.vue\";\nimport ShortLinkList from \"@/views/ShortLinkList.vue\";\nimport Login from \"@/views/Login.vue\";\nimport User from \"@/views/User.vue\";\nimport Tag from \"@/views/Tag.vue\";\nimport RedirectPage from \"@/views/RedirectPage.vue\";\nVue.use(VueRouter);\nconst routes = [{\n  path: \"/login\",\n  name: \"Login\",\n  component: Login\n}, {\n  path: \"/\",\n  name: \"Layout\",\n  component: Layout,\n  redirect: \"/create\",\n  children: [{\n    path: \"/create\",\n    name: \"CreateShortLink\",\n    component: CreateShortLink\n  }, {\n    path: \"/list\",\n    name: \"ShortLinkList\",\n    component: ShortLinkList\n  },\n  // {\n  //   path: \"/detail\",\n  //   name: \"LinkDetail\",\n  //   component: LinkDetail,\n  // },\n  {\n    path: \"/user\",\n    name: \"User\",\n    component: User\n  }, {\n    path: \"/Tag\",\n    name: \"Tag\",\n    component: Tag\n  }, {\n    path: \"/sparrow/:shortLink\",\n    name: \"Redirect\",\n    component: RedirectPage,\n    props: true\n  }]\n}];\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes\n});\n\n// // 添加全局前置守卫\n// router.beforeEach((to, from, next) => {\n//   const accessToken = localStorage.getItem(\"accessToken\");\n//\n//   // 如果要访问的是登录页，直接放行\n//   if (to.name === \"Login\") {\n//     return next();\n//   }\n//   // 如果没有token，重定向到登录页\n//   if (!accessToken) {\n//     return next({ name: \"Login\" });\n//   }\n//   // 否则继续导航\n//   next();\n// });\n\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","CreateShortLink","Layout","LinkDetail","ShortLinkList","Login","User","Tag","RedirectPage","use","routes","path","name","component","redirect","children","props","router","mode","base","process","env","BASE_URL"],"sources":["C:/Users/NNNaR/Desktop/短链/ShortLink-FrontEnd/vue/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\r\nimport VueRouter from \"vue-router\";\r\nimport CreateShortLink from \"../views/CreateShortLink.vue\";\r\nimport Layout from \"@/views/Layout.vue\";\r\nimport LinkDetail from \"@/views/LinkDetail.vue\";\r\nimport ShortLinkList from \"@/views/ShortLinkList.vue\";\r\nimport Login from \"@/views/Login.vue\";\r\nimport User from \"@/views/User.vue\";\r\nimport Tag from \"@/views/Tag.vue\";\r\nimport RedirectPage from \"@/views/RedirectPage.vue\";\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: Login,\r\n  },\r\n\r\n  {\r\n    path: \"/\",\r\n    name: \"Layout\",\r\n    component: Layout,\r\n    redirect: \"/create\",\r\n\r\n    children: [\r\n      {\r\n        path: \"/create\",\r\n        name: \"CreateShortLink\",\r\n        component: CreateShortLink,\r\n      },\r\n      {\r\n        path: \"/list\",\r\n        name: \"ShortLinkList\",\r\n        component: ShortLinkList,\r\n      },\r\n      // {\r\n      //   path: \"/detail\",\r\n      //   name: \"LinkDetail\",\r\n      //   component: LinkDetail,\r\n      // },\r\n      {\r\n        path: \"/user\",\r\n        name: \"User\",\r\n        component: User,\r\n      },\r\n      {\r\n        path: \"/Tag\",\r\n        name: \"Tag\",\r\n        component: Tag,\r\n      },\r\n      {\r\n        path: \"/sparrow/:shortLink\",\r\n        name: \"Redirect\",\r\n        component: RedirectPage,\r\n        props: true,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst router = new VueRouter({\r\n  mode: \"history\",\r\n  base: process.env.BASE_URL,\r\n  routes,\r\n});\r\n\r\n// // 添加全局前置守卫\r\n// router.beforeEach((to, from, next) => {\r\n//   const accessToken = localStorage.getItem(\"accessToken\");\r\n//\r\n//   // 如果要访问的是登录页，直接放行\r\n//   if (to.name === \"Login\") {\r\n//     return next();\r\n//   }\r\n//   // 如果没有token，重定向到登录页\r\n//   if (!accessToken) {\r\n//     return next({ name: \"Login\" });\r\n//   }\r\n//   // 否则继续导航\r\n//   next();\r\n// });\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,YAAY,MAAM,0BAA0B;AAEnDT,GAAG,CAACU,GAAG,CAACT,SAAS,CAAC;AAElB,MAAMU,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAER;AACb,CAAC,EAED;EACEM,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEX,MAAM;EACjBY,QAAQ,EAAE,SAAS;EAEnBC,QAAQ,EAAE,CACR;IACEJ,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,iBAAiB;IACvBC,SAAS,EAAEZ;EACb,CAAC,EACD;IACEU,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,eAAe;IACrBC,SAAS,EAAET;EACb,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;IACEO,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAEP;EACb,CAAC,EACD;IACEK,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAEN;EACb,CAAC,EACD;IACEI,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAEL,YAAY;IACvBQ,KAAK,EAAE;EACT,CAAC;AAEL,CAAC,CACF;AAED,MAAMC,MAAM,GAAG,IAAIjB,SAAS,CAAC;EAC3BkB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BZ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeO,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}