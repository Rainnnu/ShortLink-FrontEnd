{"ast":null,"code":"export default {\n  name: \"CreateShortLink\",\n  data() {\n    // 自定义后缀验证规则\n    const validateSuffix = (rule, value, callback) => {\n      if (value && !/^[a-zA-Z0-9_]{1,20}$/.test(value)) {\n        callback(new Error(\"仅支持字母、数字和下划线，最长20字符\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        originalUrl: \"\",\n        customSuffix: \"\"\n      },\n      submitting: false,\n      rules: {\n        originalUrl: [{\n          required: true,\n          message: \"请输入原始URL\",\n          trigger: \"blur\"\n        }, {\n          type: \"url\",\n          message: \"请输入有效的URL地址（需包含http/https）\",\n          trigger: [\"blur\", \"change\"]\n        }],\n        customSuffix: [{\n          validator: validateSuffix,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.$refs.shortLinkForm.validate(valid => {\n        if (valid) {\n          this.submitting = true;\n\n          // 模拟API调用\n          setTimeout(() => {\n            console.log(\"提交表单:\", this.form);\n            this.$message.success(\"短链创建成功！\");\n\n            // 清空表单\n            this.$refs.shortLinkForm.resetFields();\n            this.submitting = false;\n          }, 1000);\n        } else {\n          this.$message.warning(\"请正确填写表单内容\");\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validateSuffix","rule","value","callback","test","Error","form","originalUrl","customSuffix","submitting","rules","required","message","trigger","type","validator","methods","handleSubmit","$refs","shortLinkForm","validate","valid","setTimeout","console","log","$message","success","resetFields","warning"],"sources":["src/views/CreateShortLink.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n    ref=\"shortLinkForm\"\r\n    :model=\"form\"\r\n    :rules=\"rules\"\r\n    label-width=\"120px\"\r\n    class=\"create-form\"\r\n    @submit.native.prevent=\"handleSubmit\"\r\n  >\r\n    <h2 class=\"form-title\">创建短链</h2>\r\n\r\n    <!-- 原始URL输入 -->\r\n    <el-form-item label=\"原始URL：\" prop=\"originalUrl\" class=\"custom-form-item\">\r\n      <el-input\r\n        v-model=\"form.originalUrl\"\r\n        type=\"url\"\r\n        placeholder=\"https://example.com/very-long-url\"\r\n        clearable\r\n        autocomplete=\"off\"\r\n      >\r\n        <template #prepend>\r\n          <i class=\"el-icon-link\"></i>\r\n        </template>\r\n      </el-input>\r\n    </el-form-item>\r\n\r\n    <!-- 自定义后缀输入 -->\r\n    <el-form-item\r\n      label=\"自定义后缀：\"\r\n      prop=\"customSuffix\"\r\n      class=\"custom-form-item\"\r\n    >\r\n      <el-input\r\n        v-model=\"form.customSuffix\"\r\n        placeholder=\"my-custom-link (可选)\"\r\n        clearable\r\n        autocomplete=\"off\"\r\n      >\r\n        <template #prepend>\r\n          <i class=\"el-icon-edit\"></i>\r\n        </template>\r\n        <template #append> .yourdomain.com </template>\r\n      </el-input>\r\n      <div class=\"tip-text\">（仅支持字母、数字和下划线，最长20字符）</div>\r\n    </el-form-item>\r\n\r\n    <!-- 提交按钮 -->\r\n    <el-form-item class=\"submit-item\">\r\n      <el-button\r\n        type=\"primary\"\r\n        native-type=\"submit\"\r\n        :loading=\"submitting\"\r\n        @click=\"handleSubmit\"\r\n      >\r\n        <i class=\"el-icon-magic-stick\"></i>\r\n        生成短链\r\n      </el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CreateShortLink\",\r\n  data() {\r\n    // 自定义后缀验证规则\r\n    const validateSuffix = (rule, value, callback) => {\r\n      if (value && !/^[a-zA-Z0-9_]{1,20}$/.test(value)) {\r\n        callback(new Error(\"仅支持字母、数字和下划线，最长20字符\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      form: {\r\n        originalUrl: \"\",\r\n        customSuffix: \"\",\r\n      },\r\n      submitting: false,\r\n      rules: {\r\n        originalUrl: [\r\n          { required: true, message: \"请输入原始URL\", trigger: \"blur\" },\r\n          {\r\n            type: \"url\",\r\n            message: \"请输入有效的URL地址（需包含http/https）\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        customSuffix: [{ validator: validateSuffix, trigger: \"blur\" }],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit() {\r\n      this.$refs.shortLinkForm.validate((valid) => {\r\n        if (valid) {\r\n          this.submitting = true;\r\n\r\n          // 模拟API调用\r\n          setTimeout(() => {\r\n            console.log(\"提交表单:\", this.form);\r\n            this.$message.success(\"短链创建成功！\");\r\n\r\n            // 清空表单\r\n            this.$refs.shortLinkForm.resetFields();\r\n            this.submitting = false;\r\n          }, 1000);\r\n        } else {\r\n          this.$message.warning(\"请正确填写表单内容\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.create-form {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n  padding: 30px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-title {\r\n  text-align: center;\r\n  color: #409eff;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.custom-form-item {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.tip-text {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 6px;\r\n}\r\n\r\n.submit-item {\r\n  text-align: center;\r\n  margin-top: 40px;\r\n}\r\n\r\n/* 调整输入框前缀图标颜色 */\r\n.el-input-group__prepend .el-icon-link,\r\n.el-input-group__prepend .el-icon-edit {\r\n  color: #409eff;\r\n}\r\n\r\n/* 响应式布局 */\r\n@media (max-width: 768px) {\r\n  .create-form {\r\n    padding: 20px;\r\n    margin: 10px;\r\n  }\r\n\r\n  .el-form-item__label {\r\n    line-height: 1.5;\r\n    text-align: left !important;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA8DA;EACAA,IAAA;EACAC,KAAA;IACA;IACA,MAAAC,cAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA,4BAAAE,IAAA,CAAAF,KAAA;QACAC,QAAA,KAAAE,KAAA;MACA;QACAF,QAAA;MACA;IACA;IAEA;MACAG,IAAA;QACAC,WAAA;QACAC,YAAA;MACA;MACAC,UAAA;MACAC,KAAA;QACAH,WAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAC,IAAA;UACAF,OAAA;UACAC,OAAA;QACA,EACA;QACAL,YAAA;UAAAO,SAAA,EAAAf,cAAA;UAAAa,OAAA;QAAA;MACA;IACA;EACA;EACAG,OAAA;IACAC,aAAA;MACA,KAAAC,KAAA,CAAAC,aAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAZ,UAAA;;UAEA;UACAa,UAAA;YACAC,OAAA,CAAAC,GAAA,eAAAlB,IAAA;YACA,KAAAmB,QAAA,CAAAC,OAAA;;YAEA;YACA,KAAAR,KAAA,CAAAC,aAAA,CAAAQ,WAAA;YACA,KAAAlB,UAAA;UACA;QACA;UACA,KAAAgB,QAAA,CAAAG,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}