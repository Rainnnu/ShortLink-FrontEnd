{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      tagList: [],\n      selectedIds: [],\n      dialogVisible: false,\n      dialogType: \"create\",\n      loading: false,\n      submitting: false,\n      currentTag: {\n        name: \"\",\n        parentId: null,\n        color: \"#409EFF\"\n      },\n      predefineColors: [\"#409EFF\", \"#67C23A\", \"#E6A23C\", \"#F56C6C\", \"#909399\", \"#ff4500\", \"#ff8c00\", \"#ffd700\", \"#90ee90\", \"#00ced1\", \"#1e90ff\", \"#c71585\", \"rgba(255, 69, 0, 0.68)\", \"rgb(255, 120, 0)\", \"rgba(191, 0, 255, 1)\", \"hsl(181, 100%, 37%)\", \"hsla(209, 100%, 56%, 0.73)\", \"#c7158577\"],\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入标签名称\",\n          trigger: \"blur\"\n        }, {\n          max: 20,\n          message: \"长度不能超过20个字符\",\n          trigger: \"blur\"\n        }],\n        parentId: [{\n          type: \"number\",\n          message: \"必须为数字值\",\n          trigger: \"blur\"\n        }],\n        color: [{\n          pattern: /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$|^rgba?\\(.*\\)$/,\n          message: \"颜色格式不正确\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  computed: {\n    dialogTitle() {\n      return this.dialogType === \"create\" ? \"新建标签\" : \"编辑标签\";\n    }\n  },\n  created() {\n    this.fetchTags();\n  },\n  methods: {\n    async fetchTags() {\n      this.loading = true;\n      try {\n        const res = await request.get(\"/tag/get\");\n        if (res.code === 200) {\n          this.tagList = res.data || [];\n        } else {\n          this.$message.error(res.msg || \"获取标签失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"获取标签失败\");\n      } finally {\n        this.loading = false;\n      }\n    },\n    showCreateDialog() {\n      this.dialogType = \"create\";\n      this.currentTag = {\n        name: \"\",\n        parentId: null,\n        color: \"#409EFF\"\n      };\n      this.dialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.tagForm && this.$refs.tagForm.clearValidate();\n      });\n    },\n    handleEdit(row) {\n      this.dialogType = \"edit\";\n      this.currentTag = {\n        ...row\n      };\n      this.dialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.tagForm && this.$refs.tagForm.clearValidate();\n      });\n    },\n    async submitForm() {\n      this.$refs.tagForm.validate(async valid => {\n        if (!valid) return;\n        this.submitting = true;\n        try {\n          const payload = {\n            name: this.currentTag.name,\n            parentId: this.currentTag.parentId,\n            color: this.currentTag.color\n          };\n          if (this.dialogType === \"create\") {\n            const res = await request.post(\"/tag/create\", payload);\n            if (res.code === 200) {\n              this.$message.success(\"创建成功\");\n              this.dialogVisible = false;\n              this.fetchTags();\n            } else {\n              this.$message.error(res.msg || \"创建失败\");\n            }\n          } else {\n            const res = await request.put(`/tag/modify?id=${this.currentTag.id}`, payload);\n            if (res.code === 200) {\n              this.$message.success(\"修改成功\");\n              this.dialogVisible = false;\n              this.fetchTags();\n            } else {\n              this.$message.error(res.msg || \"修改失败\");\n            }\n          }\n        } catch (error) {\n          this.$message.error(\"操作失败\");\n        } finally {\n          this.submitting = false;\n        }\n      });\n    },\n    handleDelete(id) {\n      this.$confirm(\"确定要删除该标签吗?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(async () => {\n        try {\n          const res = await request.put(`/tag/delete?id=${id}`);\n          if (res.code === 200) {\n            this.$message.success(\"删除成功\");\n            this.fetchTags();\n          } else {\n            this.$message.error(res.msg || \"删除失败\");\n          }\n        } catch (error) {\n          this.$message.error(\"删除失败\");\n        }\n      }).catch(() => {});\n    },\n    batchDelete() {\n      if (this.selectedIds.length === 0) return;\n      this.$confirm(`确定要删除选中的${this.selectedIds.length}个标签吗?`, \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(async () => {\n        try {\n          const res = await request.put(\"/tag/deletes\", {\n            ids: this.selectedIds\n          });\n          if (res.code === 200) {\n            this.$message.success(`成功删除${this.selectedIds.length}个标签`);\n            this.selectedIds = [];\n            this.fetchTags();\n          } else {\n            this.$message.error(res.msg || \"批量删除失败\");\n          }\n        } catch (error) {\n          this.$message.error(\"批量删除失败\");\n        }\n      }).catch(() => {});\n    },\n    handleSelectionChange(selection) {\n      this.selectedIds = selection.map(item => item.id);\n    },\n    resetForm() {\n      this.$refs.tagForm && this.$refs.tagForm.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["request","data","tagList","selectedIds","dialogVisible","dialogType","loading","submitting","currentTag","name","parentId","color","predefineColors","rules","required","message","trigger","max","type","pattern","computed","dialogTitle","created","fetchTags","methods","res","get","code","$message","error","msg","showCreateDialog","$nextTick","$refs","tagForm","clearValidate","handleEdit","row","submitForm","validate","valid","payload","post","success","put","id","handleDelete","$confirm","confirmButtonText","cancelButtonText","then","catch","batchDelete","length","ids","handleSelectionChange","selection","map","item","resetForm","resetFields"],"sources":["src/views/Tag.vue"],"sourcesContent":["<template>\r\n  <div class=\"tag-management\">\r\n    <!-- 操作工具栏 -->\r\n    <div class=\"operation-bar\">\r\n      <el-button type=\"primary\" @click=\"showCreateDialog\">新建标签</el-button>\r\n      <el-button\r\n        type=\"danger\"\r\n        @click=\"batchDelete\"\r\n        :disabled=\"selectedIds.length === 0\"\r\n        >批量删除</el-button\r\n      >\r\n    </div>\r\n\r\n    <!-- 标签表格 -->\r\n    <el-table\r\n      :data=\"tagList\"\r\n      style=\"width: 100%\"\r\n      @selection-change=\"handleSelectionChange\"\r\n      v-loading=\"loading\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"标签名称\"></el-table-column>\r\n      <el-table-column\r\n        prop=\"parentId\"\r\n        label=\"父类ID\"\r\n        width=\"100\"\r\n      ></el-table-column>\r\n      <el-table-column prop=\"color\" label=\"颜色\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          <div\r\n            class=\"color-block\"\r\n            :style=\"{ backgroundColor: row.color || '#409EFF' }\"\r\n          ></div>\r\n          <span style=\"margin-left: 8px\">{{ row.color }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          <el-button size=\"mini\" @click=\"handleEdit(row)\">编辑</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(row.id)\"\r\n            >删除</el-button\r\n          >\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 创建/编辑对话框 -->\r\n    <el-dialog\r\n      :title=\"dialogTitle\"\r\n      :visible.sync=\"dialogVisible\"\r\n      :close-on-click-modal=\"false\"\r\n      @closed=\"resetForm\"\r\n    >\r\n      <el-form :model=\"currentTag\" :rules=\"rules\" ref=\"tagForm\">\r\n        <el-form-item label=\"标签名称\" prop=\"name\">\r\n          <el-input\r\n            v-model=\"currentTag.name\"\r\n            placeholder=\"请输入标签名称\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父类ID\" prop=\"parentId\">\r\n          <el-input\r\n            v-model.number=\"currentTag.parentId\"\r\n            type=\"number\"\r\n            placeholder=\"请输入父类ID\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"颜色\" prop=\"color\">\r\n          <el-color-picker\r\n            v-model=\"currentTag.color\"\r\n            show-alpha\r\n            :predefine=\"predefineColors\"\r\n          ></el-color-picker>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\"\r\n          >确认</el-button\r\n        >\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tagList: [],\r\n      selectedIds: [],\r\n      dialogVisible: false,\r\n      dialogType: \"create\",\r\n      loading: false,\r\n      submitting: false,\r\n      currentTag: {\r\n        name: \"\",\r\n        parentId: null,\r\n        color: \"#409EFF\",\r\n      },\r\n      predefineColors: [\r\n        \"#409EFF\",\r\n        \"#67C23A\",\r\n        \"#E6A23C\",\r\n        \"#F56C6C\",\r\n        \"#909399\",\r\n        \"#ff4500\",\r\n        \"#ff8c00\",\r\n        \"#ffd700\",\r\n        \"#90ee90\",\r\n        \"#00ced1\",\r\n        \"#1e90ff\",\r\n        \"#c71585\",\r\n        \"rgba(255, 69, 0, 0.68)\",\r\n        \"rgb(255, 120, 0)\",\r\n        \"rgba(191, 0, 255, 1)\",\r\n        \"hsl(181, 100%, 37%)\",\r\n        \"hsla(209, 100%, 56%, 0.73)\",\r\n        \"#c7158577\",\r\n      ],\r\n      rules: {\r\n        name: [\r\n          { required: true, message: \"请输入标签名称\", trigger: \"blur\" },\r\n          { max: 20, message: \"长度不能超过20个字符\", trigger: \"blur\" },\r\n        ],\r\n        parentId: [\r\n          { type: \"number\", message: \"必须为数字值\", trigger: \"blur\" },\r\n        ],\r\n        color: [\r\n          {\r\n            pattern: /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$|^rgba?\\(.*\\)$/,\r\n            message: \"颜色格式不正确\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    dialogTitle() {\r\n      return this.dialogType === \"create\" ? \"新建标签\" : \"编辑标签\";\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchTags();\r\n  },\r\n  methods: {\r\n    async fetchTags() {\r\n      this.loading = true;\r\n      try {\r\n        const res = await request.get(\"/tag/get\");\r\n        if (res.code === 200) {\r\n          this.tagList = res.data || [];\r\n        } else {\r\n          this.$message.error(res.msg || \"获取标签失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"获取标签失败\");\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    showCreateDialog() {\r\n      this.dialogType = \"create\";\r\n      this.currentTag = {\r\n        name: \"\",\r\n        parentId: null,\r\n        color: \"#409EFF\",\r\n      };\r\n      this.dialogVisible = true;\r\n      this.$nextTick(() => {\r\n        this.$refs.tagForm && this.$refs.tagForm.clearValidate();\r\n      });\r\n    },\r\n\r\n    handleEdit(row) {\r\n      this.dialogType = \"edit\";\r\n      this.currentTag = { ...row };\r\n      this.dialogVisible = true;\r\n      this.$nextTick(() => {\r\n        this.$refs.tagForm && this.$refs.tagForm.clearValidate();\r\n      });\r\n    },\r\n\r\n    async submitForm() {\r\n      this.$refs.tagForm.validate(async (valid) => {\r\n        if (!valid) return;\r\n\r\n        this.submitting = true;\r\n        try {\r\n          const payload = {\r\n            name: this.currentTag.name,\r\n            parentId: this.currentTag.parentId,\r\n            color: this.currentTag.color,\r\n          };\r\n\r\n          if (this.dialogType === \"create\") {\r\n            const res = await request.post(\"/tag/create\", payload);\r\n            if (res.code === 200) {\r\n              this.$message.success(\"创建成功\");\r\n              this.dialogVisible = false;\r\n              this.fetchTags();\r\n            } else {\r\n              this.$message.error(res.msg || \"创建失败\");\r\n            }\r\n          } else {\r\n            const res = await request.put(\r\n              `/tag/modify?id=${this.currentTag.id}`,\r\n              payload\r\n            );\r\n            if (res.code === 200) {\r\n              this.$message.success(\"修改成功\");\r\n              this.dialogVisible = false;\r\n              this.fetchTags();\r\n            } else {\r\n              this.$message.error(res.msg || \"修改失败\");\r\n            }\r\n          }\r\n        } catch (error) {\r\n          this.$message.error(\"操作失败\");\r\n        } finally {\r\n          this.submitting = false;\r\n        }\r\n      });\r\n    },\r\n\r\n    handleDelete(id) {\r\n      this.$confirm(\"确定要删除该标签吗?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(async () => {\r\n          try {\r\n            const res = await request.put(`/tag/delete?id=${id}`);\r\n            if (res.code === 200) {\r\n              this.$message.success(\"删除成功\");\r\n              this.fetchTags();\r\n            } else {\r\n              this.$message.error(res.msg || \"删除失败\");\r\n            }\r\n          } catch (error) {\r\n            this.$message.error(\"删除失败\");\r\n          }\r\n        })\r\n        .catch(() => {});\r\n    },\r\n\r\n    batchDelete() {\r\n      if (this.selectedIds.length === 0) return;\r\n\r\n      this.$confirm(\r\n        `确定要删除选中的${this.selectedIds.length}个标签吗?`,\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      )\r\n        .then(async () => {\r\n          try {\r\n            const res = await request.put(\"/tag/deletes\", {\r\n              ids: this.selectedIds,\r\n            });\r\n            if (res.code === 200) {\r\n              this.$message.success(`成功删除${this.selectedIds.length}个标签`);\r\n              this.selectedIds = [];\r\n              this.fetchTags();\r\n            } else {\r\n              this.$message.error(res.msg || \"批量删除失败\");\r\n            }\r\n          } catch (error) {\r\n            this.$message.error(\"批量删除失败\");\r\n          }\r\n        })\r\n        .catch(() => {});\r\n    },\r\n\r\n    handleSelectionChange(selection) {\r\n      this.selectedIds = selection.map((item) => item.id);\r\n    },\r\n\r\n    resetForm() {\r\n      this.$refs.tagForm && this.$refs.tagForm.resetFields();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tag-management {\r\n  padding: 20px;\r\n}\r\n\r\n.color-block {\r\n  display: inline-block;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 4px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.operation-bar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}