{"ast":null,"code":"import request from \"@/utils/request\";\nimport { md5 } from \"js-md5\";\nexport default {\n  name: \"RedirectPage\",\n  data() {\n    return {\n      loading: true,\n      needPassword: false,\n      error: false,\n      errorMessage: \"\",\n      password: \"\",\n      submitting: false,\n      shortLink: \"\",\n      originalUrl: \"\"\n    };\n  },\n  created() {\n    this.shortLink = this.$route.params.shortLink;\n    this.checkLink();\n  },\n  methods: {\n    // 检查短链状态\n    async checkLink() {\n      try {\n        this.loading = true;\n        this.error = false;\n        console.log(\"111\");\n        // const res = await request.get(`/sparrow/${this.shortLink}`);\n\n        const res = await request.post(`/sparrow/{shortLink}`, {\n          shortLink: this.shortLink,\n          password: 123456\n        });\n        console.log(\"222\");\n        console.log(res);\n        if (res.code === 200) {\n          if (res.data.needPassword) {\n            this.needPassword = true;\n            this.originalUrl = res.data.originalUrl;\n          } else {\n            // 不需要密码直接跳转\n            window.location.href = res.data.originalUrl;\n          }\n        } else if (res.code === 403) {\n          this.needPassword = true;\n          this.originalUrl = res.data?.originalUrl || \"\";\n        } else {\n          this.error = true;\n          this.errorMessage = res.msg || \"链接无效或已过期\";\n        }\n      } catch (error) {\n        this.error = true;\n        this.errorMessage = \"链接验证失败，请稍后重试\";\n        console.error(\"检查短链失败:\", error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 提交密码验证\n    async handleSubmit() {\n      if (!this.password) {\n        this.$message.warning(\"请输入访问密码\");\n        return;\n      }\n      this.submitting = true;\n      try {\n        const res = await request.post(\"/sparrow/verify\", {\n          shortLink: this.shortLink,\n          password: md5(this.password)\n        });\n        if (res.code === 200) {\n          // 验证成功，跳转到原始URL\n          window.location.href = this.originalUrl;\n        } else {\n          this.$message.error(res.msg || \"密码错误\");\n        }\n      } catch (error) {\n        this.$message.error(\"验证失败，请稍后重试\");\n        console.error(\"密码验证失败:\", error);\n      } finally {\n        this.submitting = false;\n      }\n    },\n    // 重试检查\n    retryCheck() {\n      this.loading = true;\n      this.error = false;\n      this.checkLink();\n    }\n  }\n};","map":{"version":3,"names":["request","md5","name","data","loading","needPassword","error","errorMessage","password","submitting","shortLink","originalUrl","created","$route","params","checkLink","methods","console","log","res","post","code","window","location","href","msg","handleSubmit","$message","warning","retryCheck"],"sources":["src/views/RedirectPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"redirect-container\">\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"status-box\">\r\n      <i class=\"el-icon-loading\"></i>\r\n      <p>正在验证链接...</p>\r\n    </div>\r\n\r\n    <!-- 密码输入表单 -->\r\n    <div v-else-if=\"needPassword\" class=\"password-form\">\r\n      <h2>该链接需要访问密码</h2>\r\n      <el-form @submit.native.prevent=\"handleSubmit\">\r\n        <el-form-item label=\"访问密码\">\r\n          <el-input\r\n            v-model=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"请输入访问密码\"\r\n            show-password\r\n            @keyup.enter=\"handleSubmit\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\r\n          验证密码\r\n        </el-button>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-else-if=\"error\" class=\"error-box\">\r\n      <i class=\"el-icon-warning\"></i>\r\n      <p>{{ errorMessage }}</p>\r\n      <el-button type=\"text\" @click=\"retryCheck\">重试</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport { md5 } from \"js-md5\";\r\n\r\nexport default {\r\n  name: \"RedirectPage\",\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      needPassword: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n      password: \"\",\r\n      submitting: false,\r\n      shortLink: \"\",\r\n      originalUrl: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.shortLink = this.$route.params.shortLink;\r\n    this.checkLink();\r\n  },\r\n  methods: {\r\n    // 检查短链状态\r\n    async checkLink() {\r\n      try {\r\n        this.loading = true;\r\n        this.error = false;\r\n\r\n        console.log(\"111\")\r\n        // const res = await request.get(`/sparrow/${this.shortLink}`);\r\n\r\n        const res = await request.post(`/sparrow/{shortLink}`,{\r\n          shortLink:this.shortLink,\r\n          password:123456\r\n        });\r\n        console.log(\"222\")\r\n        console.log(res)\r\n\r\n        if (res.code === 200) {\r\n\r\n          if (res.data.needPassword) {\r\n            this.needPassword = true;\r\n            this.originalUrl = res.data.originalUrl;\r\n          } else {\r\n            // 不需要密码直接跳转\r\n            window.location.href = res.data.originalUrl;\r\n          }\r\n        } else if (res.code === 403) {\r\n          this.needPassword = true;\r\n          this.originalUrl = res.data?.originalUrl || \"\";\r\n        } else {\r\n          this.error = true;\r\n          this.errorMessage = res.msg || \"链接无效或已过期\";\r\n        }\r\n      } catch (error) {\r\n        this.error = true;\r\n        this.errorMessage = \"链接验证失败，请稍后重试\";\r\n        console.error(\"检查短链失败:\", error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 提交密码验证\r\n    async handleSubmit() {\r\n      if (!this.password) {\r\n        this.$message.warning(\"请输入访问密码\");\r\n        return;\r\n      }\r\n\r\n      this.submitting = true;\r\n      try {\r\n        const res = await request.post(\"/sparrow/verify\", {\r\n          shortLink: this.shortLink,\r\n          password: md5(this.password),\r\n        });\r\n\r\n        if (res.code === 200) {\r\n          // 验证成功，跳转到原始URL\r\n          window.location.href = this.originalUrl;\r\n        } else {\r\n          this.$message.error(res.msg || \"密码错误\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"验证失败，请稍后重试\");\r\n        console.error(\"密码验证失败:\", error);\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    },\r\n\r\n    // 重试检查\r\n    retryCheck() {\r\n      this.loading = true;\r\n      this.error = false;\r\n      this.checkLink();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.redirect-container {\r\n  max-width: 500px;\r\n  margin: 100px auto;\r\n  padding: 20px;\r\n  text-align: center;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.status-box {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding: 40px 0;\r\n}\r\n\r\n.el-icon-loading {\r\n  font-size: 50px;\r\n  color: #409eff;\r\n  animation: rotating 2s linear infinite;\r\n}\r\n\r\n.password-form {\r\n  padding: 30px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 8px;\r\n}\r\n\r\n.error-box {\r\n  padding: 30px;\r\n}\r\n\r\n.el-icon-warning {\r\n  font-size: 50px;\r\n  color: #f56c6c;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@keyframes rotating {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAqCA,OAAAA,OAAA;AACA,SAAAC,GAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,YAAA;MACAC,KAAA;MACAC,YAAA;MACAC,QAAA;MACAC,UAAA;MACAC,SAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAF,SAAA,QAAAG,MAAA,CAAAC,MAAA,CAAAJ,SAAA;IACA,KAAAK,SAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAD,UAAA;MACA;QACA,KAAAX,OAAA;QACA,KAAAE,KAAA;QAEAW,OAAA,CAAAC,GAAA;QACA;;QAEA,MAAAC,GAAA,SAAAnB,OAAA,CAAAoB,IAAA;UACAV,SAAA,OAAAA,SAAA;UACAF,QAAA;QACA;QACAS,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAAC,GAAA;QAEA,IAAAA,GAAA,CAAAE,IAAA;UAEA,IAAAF,GAAA,CAAAhB,IAAA,CAAAE,YAAA;YACA,KAAAA,YAAA;YACA,KAAAM,WAAA,GAAAQ,GAAA,CAAAhB,IAAA,CAAAQ,WAAA;UACA;YACA;YACAW,MAAA,CAAAC,QAAA,CAAAC,IAAA,GAAAL,GAAA,CAAAhB,IAAA,CAAAQ,WAAA;UACA;QACA,WAAAQ,GAAA,CAAAE,IAAA;UACA,KAAAhB,YAAA;UACA,KAAAM,WAAA,GAAAQ,GAAA,CAAAhB,IAAA,EAAAQ,WAAA;QACA;UACA,KAAAL,KAAA;UACA,KAAAC,YAAA,GAAAY,GAAA,CAAAM,GAAA;QACA;MACA,SAAAnB,KAAA;QACA,KAAAA,KAAA;QACA,KAAAC,YAAA;QACAU,OAAA,CAAAX,KAAA,YAAAA,KAAA;MACA;QACA,KAAAF,OAAA;MACA;IACA;IAEA;IACA,MAAAsB,aAAA;MACA,UAAAlB,QAAA;QACA,KAAAmB,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,KAAAnB,UAAA;MACA;QACA,MAAAU,GAAA,SAAAnB,OAAA,CAAAoB,IAAA;UACAV,SAAA,OAAAA,SAAA;UACAF,QAAA,EAAAP,GAAA,MAAAO,QAAA;QACA;QAEA,IAAAW,GAAA,CAAAE,IAAA;UACA;UACAC,MAAA,CAAAC,QAAA,CAAAC,IAAA,QAAAb,WAAA;QACA;UACA,KAAAgB,QAAA,CAAArB,KAAA,CAAAa,GAAA,CAAAM,GAAA;QACA;MACA,SAAAnB,KAAA;QACA,KAAAqB,QAAA,CAAArB,KAAA;QACAW,OAAA,CAAAX,KAAA,YAAAA,KAAA;MACA;QACA,KAAAG,UAAA;MACA;IACA;IAEA;IACAoB,WAAA;MACA,KAAAzB,OAAA;MACA,KAAAE,KAAA;MACA,KAAAS,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}