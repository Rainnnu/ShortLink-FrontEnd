{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"CreateShortLink\",\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (this.form.privateTarget && !value) {\n        callback(new Error(\"私密链接必须设置密码\"));\n      } else if (this.form.privateTarget && (value.length < 4 || value.length > 12)) {\n        callback(new Error(\"密码长度4-12位\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        title: \"\",\n        originalUrl: \"\",\n        customSuffix: \"\",\n        tags: [],\n        privateTarget: false,\n        password: \"\",\n        expireTime: null,\n        // 初始值为null\n        allowNum: 0\n      },\n      tagOptions: [],\n      submitting: false,\n      pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() < Date.now() - 86400000; // 禁用今天之前的日期\n        }\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: \"请输入链接标题\",\n          trigger: \"blur\"\n        }, {\n          max: 30,\n          message: \"标题最长30个字符\",\n          trigger: \"blur\"\n        }],\n        originalUrl: [{\n          required: true,\n          message: \"请输入原始URL\",\n          trigger: \"blur\"\n        }, {\n          type: \"url\",\n          message: \"请输入有效的URL地址\",\n          trigger: [\"blur\", \"change\"]\n        }],\n        customSuffix: [{\n          pattern: /^[a-zA-Z0-9_]{0,20}$/,\n          message: \"仅支持字母、数字和下划线\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          validator: validatePassword,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created() {\n    this.fetchTags();\n  },\n  methods: {\n    async fetchTags() {\n      try {\n        const res = await request.get(`/tag/get?userId=${15}`);\n        if (res.code === 200) {\n          this.tagOptions = res.data || [];\n        } else {\n          this.$message.error(res.msg);\n        }\n      } catch (error) {\n        this.$message.error(\"获取标签失败\");\n      }\n    },\n    async handleSubmit() {\n      try {\n        await this.$refs.shortLinkForm.validate();\n        this.submitting = true;\n        const params = {\n          title: this.form.title,\n          longUrl: this.form.originalUrl,\n          customSuffix: this.form.customSuffix,\n          tags: this.form.tags,\n          privateTarget: this.form.privateTarget,\n          password: this.form.privateTarget ? this.form.password : undefined,\n          expireTime: this.form.expireTime,\n          allowNum: this.form.allowNum || 0\n        };\n        console.log(tags);\n        const res = await request.post(\"/creat/shortLink\", params);\n        if (res.code === 200) {\n          this.$message.success(res.msg || \"短链创建成功\");\n          this.resetForm();\n        } else {\n          // 显示后端返回的具体错误信息\n          this.$message.error(res.msg || \"短链创建失败\");\n        }\n      } catch (error) {\n        // 更精确的错误处理\n        if (error.response) {\n          // 请求已发出，服务器响应状态码不在2xx范围\n          if (error.response.status === 401) {\n            this.$message.error(\"登录已过期，请重新登录\");\n          } else if (error.response.status === 500) {\n            this.$message.error(\"服务器内部错误，请联系管理员\");\n          } else {\n            this.$message.error(`请求失败: ${error.response.data?.msg || error.response.statusText}`);\n          }\n        } else if (error.request) {\n          // 请求已发出但没有收到响应\n          this.$message.error(\"网络连接异常，请检查网络设置\");\n        } else {\n          // 请求配置出错\n          this.$message.error(\"请求配置错误: \" + error.message);\n        }\n      } finally {\n        this.submitting = false;\n      }\n    },\n    resetForm() {\n      this.$refs.shortLinkForm.resetFields();\n      // 重置后恢复初始值\n      this.form.allowNum = 0;\n      this.form.expireTime = null; // 重置为空\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","validatePassword","rule","value","callback","form","privateTarget","Error","length","title","originalUrl","customSuffix","tags","password","expireTime","allowNum","tagOptions","submitting","pickerOptions","disabledDate","time","getTime","Date","now","rules","required","message","trigger","max","type","pattern","validator","created","fetchTags","methods","res","get","code","$message","error","msg","handleSubmit","$refs","shortLinkForm","validate","params","longUrl","undefined","console","log","post","success","resetForm","response","status","statusText","resetFields"],"sources":["src/views/CreateShortLink.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n    ref=\"shortLinkForm\"\r\n    :model=\"form\"\r\n    :rules=\"rules\"\r\n    label-width=\"120px\"\r\n    class=\"create-form\"\r\n    @submit.native.prevent=\"handleSubmit\"\r\n  >\r\n    <h2 class=\"form-title\">创建短链</h2>\r\n\r\n    <!-- 标题 -->\r\n    <el-form-item label=\"标题：\" prop=\"title\" class=\"custom-form-item\">\r\n      <el-input\r\n        v-model=\"form.title\"\r\n        placeholder=\"请输入链接标题\"\r\n        clearable\r\n        autocomplete=\"off\"\r\n      >\r\n        <template #prepend>\r\n          <i class=\"el-icon-edit-outline\"></i>\r\n        </template>\r\n      </el-input>\r\n    </el-form-item>\r\n\r\n    <!-- 原始URL -->\r\n    <el-form-item label=\"原始URL：\" prop=\"originalUrl\" class=\"custom-form-item\">\r\n      <el-input\r\n        v-model=\"form.originalUrl\"\r\n        type=\"url\"\r\n        placeholder=\"https://example.com/very-long-url\"\r\n        clearable\r\n        autocomplete=\"off\"\r\n      >\r\n        <template #prepend>\r\n          <i class=\"el-icon-link\"></i>\r\n        </template>\r\n      </el-input>\r\n    </el-form-item>\r\n\r\n    <!-- 自定义后缀 -->\r\n    <el-form-item\r\n      label=\"自定义后缀：\"\r\n      prop=\"customSuffix\"\r\n      class=\"custom-form-item\"\r\n    >\r\n      <el-input\r\n        v-model=\"form.customSuffix\"\r\n        placeholder=\"my-custom-link (可选)\"\r\n        clearable\r\n        autocomplete=\"off\"\r\n      >\r\n        <template #prepend>\r\n          <i class=\"el-icon-edit\"></i>\r\n        </template>\r\n        <template #append> .yourdomain.com </template>\r\n      </el-input>\r\n      <div class=\"tip-text\">（仅支持字母、数字和下划线，最长20字符）</div>\r\n    </el-form-item>\r\n\r\n    <!-- 标签选择 -->\r\n    <el-form-item label=\"选择标签：\" prop=\"tags\" class=\"custom-form-item\">\r\n      <el-select\r\n        v-model=\"form.tags\"\r\n        multiple\r\n        filterable\r\n        placeholder=\"请选择标签\"\r\n        style=\"width: 100%\"\r\n      >\r\n        <el-option\r\n          v-for=\"tag in tagOptions\"\r\n          :key=\"tag.id\"\r\n          :label=\"tag.name\"\r\n          :value=\"tag.id\"\r\n        >\r\n          <span class=\"tag-option\">\r\n            <div\r\n              class=\"color-block\"\r\n              :style=\"{ backgroundColor: tag.color }\"\r\n            ></div>\r\n            {{ tag.name }}\r\n          </span>\r\n        </el-option>\r\n      </el-select>\r\n    </el-form-item>\r\n\r\n    <!-- 访问控制 -->\r\n    <el-form-item label=\"访问设置：\" class=\"custom-form-item\">\r\n      <div class=\"access-settings\">\r\n        <el-switch\r\n          v-model=\"form.privateTarget\"\r\n          active-text=\"私密链接\"\r\n          style=\"margin-right: 20px\"\r\n        />\r\n        <el-input-number\r\n          v-model=\"form.allowNum\"\r\n          :min=\"0\"\r\n          :max=\"999999\"\r\n          label=\"允许访问次数\"\r\n          placeholder=\"不限次数\"\r\n          style=\"width: 180px\"\r\n        />\r\n      </div>\r\n    </el-form-item>\r\n\r\n    <!-- 密码设置 -->\r\n    <el-form-item\r\n      v-if=\"form.privateTarget\"\r\n      label=\"访问密码：\"\r\n      prop=\"password\"\r\n      class=\"custom-form-item\"\r\n    >\r\n      <el-input\r\n        v-model=\"form.password\"\r\n        type=\"password\"\r\n        placeholder=\"请输入4-12位密码\"\r\n        show-password\r\n      />\r\n    </el-form-item>\r\n\r\n    <!-- 过期时间 -->\r\n    <el-form-item label=\"过期时间：\" prop=\"expireTime\" class=\"custom-form-item\">\r\n      <el-date-picker\r\n        v-model=\"form.expireTime\"\r\n        type=\"datetime\"\r\n        placeholder=\"选择过期时间\"\r\n        value-format=\"timestamp\"\r\n        :picker-options=\"pickerOptions\"\r\n      />\r\n    </el-form-item>\r\n\r\n    <!-- 提交按钮 -->\r\n    <el-form-item class=\"submit-item\">\r\n      <el-button type=\"primary\" native-type=\"submit\" :loading=\"submitting\">\r\n        <i class=\"el-icon-magic-stick\"></i>\r\n        生成短链\r\n      </el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"CreateShortLink\",\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (this.form.privateTarget && !value) {\r\n        callback(new Error(\"私密链接必须设置密码\"));\r\n      } else if (\r\n        this.form.privateTarget &&\r\n        (value.length < 4 || value.length > 12)\r\n      ) {\r\n        callback(new Error(\"密码长度4-12位\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      form: {\r\n        title: \"\",\r\n        originalUrl: \"\",\r\n        customSuffix: \"\",\r\n        tags: [],\r\n        privateTarget: false,\r\n        password: \"\",\r\n        expireTime: null, // 初始值为null\r\n        allowNum: 0,\r\n      },\r\n      tagOptions: [],\r\n      submitting: false,\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          return time.getTime() < Date.now() - 86400000; // 禁用今天之前的日期\r\n        },\r\n      },\r\n      rules: {\r\n        title: [\r\n          { required: true, message: \"请输入链接标题\", trigger: \"blur\" },\r\n          { max: 30, message: \"标题最长30个字符\", trigger: \"blur\" },\r\n        ],\r\n        originalUrl: [\r\n          { required: true, message: \"请输入原始URL\", trigger: \"blur\" },\r\n          {\r\n            type: \"url\",\r\n            message: \"请输入有效的URL地址\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        customSuffix: [\r\n          {\r\n            pattern: /^[a-zA-Z0-9_]{0,20}$/,\r\n            message: \"仅支持字母、数字和下划线\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        password: [{ validator: validatePassword, trigger: \"blur\" }],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchTags();\r\n  },\r\n  methods: {\r\n    async fetchTags() {\r\n      try {\r\n        const res = await request.get(`/tag/get?userId=${15}`);\r\n        if (res.code === 200) {\r\n          this.tagOptions = res.data || [];\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"获取标签失败\");\r\n      }\r\n    },\r\n\r\n    async handleSubmit() {\r\n      try {\r\n        await this.$refs.shortLinkForm.validate();\r\n        this.submitting = true;\r\n\r\n        const params = {\r\n          title: this.form.title,\r\n          longUrl: this.form.originalUrl,\r\n          customSuffix: this.form.customSuffix,\r\n          tags: this.form.tags,\r\n          privateTarget: this.form.privateTarget,\r\n          password: this.form.privateTarget ? this.form.password : undefined,\r\n          expireTime: this.form.expireTime,\r\n          allowNum: this.form.allowNum || 0,\r\n        };\r\n        console.log(tags);\r\n        const res = await request.post(\"/creat/shortLink\", params);\r\n\r\n        if (res.code === 200) {\r\n          this.$message.success(res.msg || \"短链创建成功\");\r\n          this.resetForm();\r\n        } else {\r\n          // 显示后端返回的具体错误信息\r\n          this.$message.error(res.msg || \"短链创建失败\");\r\n        }\r\n      } catch (error) {\r\n        // 更精确的错误处理\r\n        if (error.response) {\r\n          // 请求已发出，服务器响应状态码不在2xx范围\r\n          if (error.response.status === 401) {\r\n            this.$message.error(\"登录已过期，请重新登录\");\r\n          } else if (error.response.status === 500) {\r\n            this.$message.error(\"服务器内部错误，请联系管理员\");\r\n          } else {\r\n            this.$message.error(\r\n              `请求失败: ${\r\n                error.response.data?.msg || error.response.statusText\r\n              }`\r\n            );\r\n          }\r\n        } else if (error.request) {\r\n          // 请求已发出但没有收到响应\r\n          this.$message.error(\"网络连接异常，请检查网络设置\");\r\n        } else {\r\n          // 请求配置出错\r\n          this.$message.error(\"请求配置错误: \" + error.message);\r\n        }\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    },\r\n\r\n    resetForm() {\r\n      this.$refs.shortLinkForm.resetFields();\r\n      // 重置后恢复初始值\r\n      this.form.allowNum = 0;\r\n      this.form.expireTime = null; // 重置为空\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.color-block {\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 3px;\r\n  margin-right: 8px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.tag-option {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.access-settings {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.create-form {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n  padding: 30px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-title {\r\n  text-align: center;\r\n  color: #409eff;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.custom-form-item {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.tip-text {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 6px;\r\n}\r\n\r\n.submit-item {\r\n  text-align: center;\r\n  margin-top: 40px;\r\n}\r\n\r\n.el-input-group__prepend .el-icon-link,\r\n.el-input-group__prepend .el-icon-edit {\r\n  color: #409eff;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .create-form {\r\n    padding: 20px;\r\n    margin: 10px;\r\n  }\r\n\r\n  .el-form-item__label {\r\n    line-height: 1.5;\r\n    text-align: left !important;\r\n  }\r\n}\r\n\r\n/* 时间选择器样式优化 */\r\n.el-date-editor.el-input {\r\n  width: 100%;\r\n}\r\n\r\n.el-date-picker {\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}