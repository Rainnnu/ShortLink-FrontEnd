{"ast":null,"code":"export default {\n  name: \"CreateShortLink\",\n  data() {\n    // 自定义后缀验证规则\n    const validateSuffix = (rule, value, callback) => {\n      if (value && !/^[a-zA-Z0-9_]{1,20}$/.test(value)) {\n        callback(new Error(\"仅支持字母、数字和下划线，最长20字符\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        originalUrl: \"\",\n        customSuffix: \"\"\n      },\n      submitting: false,\n      rules: {\n        originalUrl: [{\n          required: true,\n          message: \"请输入原始URL\",\n          trigger: \"blur\"\n        }, {\n          type: \"url\",\n          message: \"请输入有效的URL地址（需包含http/https）\",\n          trigger: [\"blur\", \"change\"]\n        }],\n        customSuffix: [{\n          validator: validateSuffix,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.$refs.shortLinkForm.validate(valid => {\n        if (valid) {\n          this.submitting = true;\n\n          // 模拟API调用\n          setTimeout(() => {\n            console.log(\"提交表单:\", this.form);\n            this.$message.success(\"短链创建成功！\");\n\n            // 清空表单\n            this.$refs.shortLinkForm.resetFields();\n            this.submitting = false;\n          }, 1000);\n        } else {\n          this.$message.warning(\"请正确填写表单内容\");\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validateSuffix","rule","value","callback","test","Error","form","originalUrl","customSuffix","submitting","rules","required","message","trigger","type","validator","methods","handleSubmit","$refs","shortLinkForm","validate","valid","setTimeout","console","log","$message","success","resetFields","warning"],"sources":["src/views/CreateShortLink.vue"],"sourcesContent":["<template>\n  <el-form\n    ref=\"shortLinkForm\"\n    :model=\"form\"\n    :rules=\"rules\"\n    label-width=\"120px\"\n    class=\"create-form\"\n    @submit.native.prevent=\"handleSubmit\"\n  >\n    <h2 class=\"form-title\">创建短链</h2>\n\n    <!-- 原始URL输入 -->\n    <el-form-item label=\"原始URL：\" prop=\"originalUrl\" class=\"custom-form-item\">\n      <el-input\n        v-model=\"form.originalUrl\"\n        type=\"url\"\n        placeholder=\"https://example.com/very-long-url\"\n        clearable\n        autocomplete=\"off\"\n      >\n        <template #prepend>\n          <i class=\"el-icon-link\"></i>\n        </template>\n      </el-input>\n    </el-form-item>\n\n    <!-- 自定义后缀输入 -->\n    <el-form-item\n      label=\"自定义后缀：\"\n      prop=\"customSuffix\"\n      class=\"custom-form-item\"\n    >\n      <el-input\n        v-model=\"form.customSuffix\"\n        placeholder=\"my-custom-link (可选)\"\n        clearable\n        autocomplete=\"off\"\n      >\n        <template #prepend>\n          <i class=\"el-icon-edit\"></i>\n        </template>\n        <template #append> .yourdomain.com </template>\n      </el-input>\n      <div class=\"tip-text\">（仅支持字母、数字和下划线，最长20字符）</div>\n    </el-form-item>\n\n    <!-- 提交按钮 -->\n    <el-form-item class=\"submit-item\">\n      <el-button\n        type=\"primary\"\n        native-type=\"submit\"\n        :loading=\"submitting\"\n        @click=\"handleSubmit\"\n      >\n        <i class=\"el-icon-magic-stick\"></i>\n        生成短链\n      </el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nexport default {\n  name: \"CreateShortLink\",\n  data() {\n    // 自定义后缀验证规则\n    const validateSuffix = (rule, value, callback) => {\n      if (value && !/^[a-zA-Z0-9_]{1,20}$/.test(value)) {\n        callback(new Error(\"仅支持字母、数字和下划线，最长20字符\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      form: {\n        originalUrl: \"\",\n        customSuffix: \"\",\n      },\n      submitting: false,\n      rules: {\n        originalUrl: [\n          { required: true, message: \"请输入原始URL\", trigger: \"blur\" },\n          {\n            type: \"url\",\n            message: \"请输入有效的URL地址（需包含http/https）\",\n            trigger: [\"blur\", \"change\"],\n          },\n        ],\n        customSuffix: [{ validator: validateSuffix, trigger: \"blur\" }],\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.$refs.shortLinkForm.validate((valid) => {\n        if (valid) {\n          this.submitting = true;\n\n          // 模拟API调用\n          setTimeout(() => {\n            console.log(\"提交表单:\", this.form);\n            this.$message.success(\"短链创建成功！\");\n\n            // 清空表单\n            this.$refs.shortLinkForm.resetFields();\n            this.submitting = false;\n          }, 1000);\n        } else {\n          this.$message.warning(\"请正确填写表单内容\");\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.create-form {\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 30px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n}\n\n.form-title {\n  text-align: center;\n  color: #409eff;\n  margin-bottom: 30px;\n}\n\n.custom-form-item {\n  margin-bottom: 24px;\n}\n\n.tip-text {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 6px;\n}\n\n.submit-item {\n  text-align: center;\n  margin-top: 40px;\n}\n\n/* 调整输入框前缀图标颜色 */\n.el-input-group__prepend .el-icon-link,\n.el-input-group__prepend .el-icon-edit {\n  color: #409eff;\n}\n\n/* 响应式布局 */\n@media (max-width: 768px) {\n  .create-form {\n    padding: 20px;\n    margin: 10px;\n  }\n\n  .el-form-item__label {\n    line-height: 1.5;\n    text-align: left !important;\n  }\n}\n</style>\n"],"mappings":"AA8DA;EACAA,IAAA;EACAC,KAAA;IACA;IACA,MAAAC,cAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA,4BAAAE,IAAA,CAAAF,KAAA;QACAC,QAAA,KAAAE,KAAA;MACA;QACAF,QAAA;MACA;IACA;IAEA;MACAG,IAAA;QACAC,WAAA;QACAC,YAAA;MACA;MACAC,UAAA;MACAC,KAAA;QACAH,WAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAC,IAAA;UACAF,OAAA;UACAC,OAAA;QACA,EACA;QACAL,YAAA;UAAAO,SAAA,EAAAf,cAAA;UAAAa,OAAA;QAAA;MACA;IACA;EACA;EACAG,OAAA;IACAC,aAAA;MACA,KAAAC,KAAA,CAAAC,aAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAZ,UAAA;;UAEA;UACAa,UAAA;YACAC,OAAA,CAAAC,GAAA,eAAAlB,IAAA;YACA,KAAAmB,QAAA,CAAAC,OAAA;;YAEA;YACA,KAAAR,KAAA,CAAAC,aAAA,CAAAQ,WAAA;YACA,KAAAlB,UAAA;UACA;QACA;UACA,KAAAgB,QAAA,CAAAG,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}