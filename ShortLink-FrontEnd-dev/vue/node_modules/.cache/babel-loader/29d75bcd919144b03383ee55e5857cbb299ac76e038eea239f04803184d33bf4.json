{"ast":null,"code":"import dayjs from 'dayjs';\nexport default {\n  name: 'ShortLinkList',\n  data() {\n    return {\n      searchQuery: '',\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      links: [\n      // 示例数据（建议通过API获取）\n      {\n        id: 1,\n        shortUrl: 'https://s.link/abc123',\n        originalUrl: 'https://example.com/long-url',\n        createdAt: '2024-03-01 14:30',\n        accessCount: 150\n      }]\n    };\n  },\n  computed: {\n    filteredLinks() {\n      return this.links.filter(link => [link.shortUrl, link.originalUrl].some(text => text.toLowerCase().includes(this.searchQuery.toLowerCase())));\n    },\n    pagedLinks() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.filteredLinks.slice(start, end);\n    }\n  },\n  methods: {\n    // 格式时间显示\n    formatDate(row, column, cellValue) {\n      // 使用day.js库更可靠\n      return dayjs(cellValue).format('YYYY-MM-DD HH:mm');\n    },\n    // 处理分页变化\n    handleSizeChange(newSize) {\n      this.pageSize = newSize;\n      this.currentPage = 1;\n    },\n    handleCurrentChange(newPage) {\n      this.currentPage = newPage;\n    },\n    // 刷新列表\n    async refreshList() {\n      try {\n        this.loading = true;\n        // 模拟API调用\n        const response = await axios.get('/api/links');\n        this.links = response.data;\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 删除确认\n    async deleteLink(id) {\n      try {\n        await axios.delete(`/api/links/${id}`);\n        this.links = this.links.filter(link => link.id !== id);\n        this.$message.success('删除成功');\n      } catch (error) {\n        this.$message.error('删除失败');\n      }\n    },\n    // 短链点击处理\n    handleShortLinkClick(link) {\n      this.$confirm(`即将跳转到：${link.originalUrl}`, '安全提示', {\n        confirmButtonText: '继续访问',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        window.open(link.shortUrl, '_blank');\n      });\n    }\n  }\n};","map":{"version":3,"names":["dayjs","name","data","searchQuery","currentPage","pageSize","loading","links","id","shortUrl","originalUrl","createdAt","accessCount","computed","filteredLinks","filter","link","some","text","toLowerCase","includes","pagedLinks","start","end","slice","methods","formatDate","row","column","cellValue","format","handleSizeChange","newSize","handleCurrentChange","newPage","refreshList","response","axios","get","deleteLink","delete","$message","success","error","handleShortLinkClick","$confirm","confirmButtonText","cancelButtonText","type","then","window","open"],"sources":["src/views/ShortLinkList.vue"],"sourcesContent":["<template>\n  <div class=\"list-container\">\n    <!-- 搜索和操作区 -->\n    <div class=\"operation-bar\">\n      <el-input\n          v-model=\"searchQuery\"\n          placeholder=\"输入短链/原始URL搜索\"\n          clearable\n          class=\"search-input\"\n          @clear=\"handleSearchClear\"\n      >\n        <template #prefix>\n          <i class=\"el-icon-search\"></i>\n        </template>\n      </el-input>\n\n      <el-button\n          type=\"primary\"\n          icon=\"el-icon-refresh\"\n          @click=\"refreshList\"\n      >刷新列表</el-button>\n    </div>\n\n    <!-- 数据表格 -->\n    <el-table\n        :data=\"pagedLinks\"\n        stripe\n        border\n        v-loading=\"loading\"\n        element-loading-text=\"正在加载...\"\n        class=\"data-table\"\n    >\n      <el-table-column prop=\"shortUrl\" label=\"短链\" sortable width=\"240\">\n        <template #default=\"{ row }\">\n          <el-link\n              type=\"primary\"\n              :href=\"row.shortUrl\"\n              target=\"_blank\"\n              @click.prevent=\"handleShortLinkClick(row)\"\n          >{{ row.shortUrl }}</el-link>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n          prop=\"originalUrl\"\n          label=\"原始URL\"\n          show-overflow-tooltip\n          width=\"400\"\n      />\n\n      <el-table-column\n          prop=\"createdAt\"\n          label=\"创建时间\"\n          sortable\n          width=\"180\"\n          :formatter=\"formatDate\"\n      />\n\n      <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\n        <template #default=\"{ row }\">\n          <el-button\n              type=\"primary\"\n              icon=\"el-icon-view\"\n              @click=\"showDetail(row)\"\n          >详情</el-button>\n\n          <el-popconfirm\n              title=\"确认删除该短链吗？\"\n              @confirm=\"deleteLink(row.id)\"\n          >\n            <template #reference>\n              <el-button\n                  type=\"danger\"\n                  icon=\"el-icon-delete\"\n              >删除</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页 -->\n    <el-pagination\n        background\n        :current-page=\"currentPage\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"pageSize\"\n        :total=\"filteredLinks.length\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pagination\"\n    />\n  </div>\n</template>\n\n<script>\nimport dayjs from 'dayjs';\nexport default {\n  name: 'ShortLinkList',\n  data() {\n    return {\n      searchQuery: '',\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      links: [\n        // 示例数据（建议通过API获取）\n        {\n          id: 1,\n          shortUrl: 'https://s.link/abc123',\n          originalUrl: 'https://example.com/long-url',\n          createdAt: '2024-03-01 14:30',\n          accessCount: 150\n        }\n      ]\n    }\n  },\n  computed: {\n    filteredLinks() {\n      return this.links.filter(link =>\n          [link.shortUrl, link.originalUrl].some(\n              text => text.toLowerCase().includes(\n                  this.searchQuery.toLowerCase()\n              )\n          )\n      )\n    },\n    pagedLinks() {\n      const start = (this.currentPage - 1) * this.pageSize\n      const end = start + this.pageSize\n      return this.filteredLinks.slice(start, end)\n    }\n  },\n  methods: {\n    // 格式时间显示\n    formatDate(row, column, cellValue) {\n      // 使用day.js库更可靠\n      return dayjs(cellValue).format('YYYY-MM-DD HH:mm');\n    },\n    // 处理分页变化\n    handleSizeChange(newSize) {\n      this.pageSize = newSize\n      this.currentPage = 1\n    },\n\n    handleCurrentChange(newPage) {\n      this.currentPage = newPage\n    },\n\n    // 刷新列表\n    async refreshList() {\n      try {\n        this.loading = true;\n        // 模拟API调用\n        const response = await axios.get('/api/links');\n        this.links = response.data;\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // 删除确认\n    async deleteLink(id) {\n      try {\n        await axios.delete(`/api/links/${id}`);\n        this.links = this.links.filter(link => link.id !== id);\n        this.$message.success('删除成功');\n      } catch (error) {\n        this.$message.error('删除失败');\n      }\n    },\n\n    // 短链点击处理\n    handleShortLinkClick(link) {\n      this.$confirm(`即将跳转到：${link.originalUrl}`, '安全提示', {\n        confirmButtonText: '继续访问',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        window.open(link.shortUrl, '_blank')\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.list-container {\n  padding: 20px;\n  background: #fff;\n  border-radius: 8px;\n}\n\n.operation-bar {\n  display: flex;\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  flex: 1;\n  max-width: 400px;\n}\n\n.data-table {\n  margin: 20px 0;\n}\n\n.pagination {\n  margin-top: 20px;\n  justify-content: flex-end;\n}\n\n.el-button + .el-button {\n  margin-left: 8px;\n}\n</style>"],"mappings":"AAiGA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,WAAA;MACAC,QAAA;MACAC,OAAA;MACAC,KAAA;MACA;MACA;QACAC,EAAA;QACAC,QAAA;QACAC,WAAA;QACAC,SAAA;QACAC,WAAA;MACA;IAEA;EACA;EACAC,QAAA;IACAC,cAAA;MACA,YAAAP,KAAA,CAAAQ,MAAA,CAAAC,IAAA,IACA,CAAAA,IAAA,CAAAP,QAAA,EAAAO,IAAA,CAAAN,WAAA,EAAAO,IAAA,CACAC,IAAA,IAAAA,IAAA,CAAAC,WAAA,GAAAC,QAAA,CACA,KAAAjB,WAAA,CAAAgB,WAAA,EACA,CACA,CACA;IACA;IACAE,WAAA;MACA,MAAAC,KAAA,SAAAlB,WAAA,aAAAC,QAAA;MACA,MAAAkB,GAAA,GAAAD,KAAA,QAAAjB,QAAA;MACA,YAAAS,aAAA,CAAAU,KAAA,CAAAF,KAAA,EAAAC,GAAA;IACA;EACA;EACAE,OAAA;IACA;IACAC,WAAAC,GAAA,EAAAC,MAAA,EAAAC,SAAA;MACA;MACA,OAAA7B,KAAA,CAAA6B,SAAA,EAAAC,MAAA;IACA;IACA;IACAC,iBAAAC,OAAA;MACA,KAAA3B,QAAA,GAAA2B,OAAA;MACA,KAAA5B,WAAA;IACA;IAEA6B,oBAAAC,OAAA;MACA,KAAA9B,WAAA,GAAA8B,OAAA;IACA;IAEA;IACA,MAAAC,YAAA;MACA;QACA,KAAA7B,OAAA;QACA;QACA,MAAA8B,QAAA,SAAAC,KAAA,CAAAC,GAAA;QACA,KAAA/B,KAAA,GAAA6B,QAAA,CAAAlC,IAAA;MACA;QACA,KAAAI,OAAA;MACA;IACA;IAEA;IACA,MAAAiC,WAAA/B,EAAA;MACA;QACA,MAAA6B,KAAA,CAAAG,MAAA,eAAAhC,EAAA;QACA,KAAAD,KAAA,QAAAA,KAAA,CAAAQ,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAR,EAAA,KAAAA,EAAA;QACA,KAAAiC,QAAA,CAAAC,OAAA;MACA,SAAAC,KAAA;QACA,KAAAF,QAAA,CAAAE,KAAA;MACA;IACA;IAEA;IACAC,qBAAA5B,IAAA;MACA,KAAA6B,QAAA,UAAA7B,IAAA,CAAAN,WAAA;QACAoC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACAC,MAAA,CAAAC,IAAA,CAAAnC,IAAA,CAAAP,QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}